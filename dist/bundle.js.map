{"version":3,"file":"bundle.js","mappings":"MAkDA,SAASA,IACL,MAAMC,EAAQ,CAAC,EAEfC,SAASC,iBAAiB,WAAWC,SAAQC,IACzC,MAAMC,EAAWD,EAAOE,QAAQD,SAChCL,EAAMK,GAAYE,MAAMC,KAAKJ,EAAOF,iBAAiB,UAAUO,KAAIC,GAAQA,EAAKC,YAAYC,QAAQ,KAAM,IAAIC,QAAO,IAGzHC,aAAaC,QAAQ,cAAeC,KAAKC,UAAUjB,GACvD,CA3DAC,SAASiB,iBAAiB,oBAAoB,KAC1BjB,SAASC,iBAAiB,WAElCC,SAAQC,IACUA,EAAOe,cAAc,aAC7BD,iBAAiB,SAAS,KACpC,MAAME,EAAWC,OAAO,oBACpBD,IAmBhB,SAAiBhB,EAAQkB,GACrB,MAAMZ,EAAOT,SAASsB,cAAc,OACpCb,EAAKc,UAAY,OACjBd,EAAKC,YAAcW,EACnBZ,EAAKe,aAAa,aAAa,GAE/B,MAAMC,EAAYzB,SAASsB,cAAc,QACzCG,EAAUf,YAAc,KACxBe,EAAUF,UAAY,SACtBE,EAAUC,QAAU,KAChBjB,EAAKkB,SACL7B,GAAW,EAGfW,EAAKmB,YAAYH,GAEjBhB,EAAKQ,iBAAiB,aAAcY,IAChCA,EAAEC,aAAaC,QAAQ,aAActB,EAAKuB,IAC1CH,EAAEC,aAAaG,cAAgB,MAAM,IAGzC9B,EAAOe,cAAc,UAAUU,YAAYnB,EAC/C,CAxCgByB,CAAQ/B,EAAQgB,GAChBrB,IACJ,IAGJ,MAAMqC,EAAiBhC,EAAOe,cAAc,UAC5CiB,EAAelB,iBAAiB,YAAaY,GAAMA,EAAEO,mBACrDD,EAAelB,iBAAiB,QAASY,IACrC,MAAMQ,EAASR,EAAEC,aAAaQ,QAAQ,cAChC7B,EAAOT,SAASuC,eAAeF,GACrCF,EAAeP,YAAYnB,GAC3BX,GAAW,GACb,IA0CQiB,KAAKyB,MAAM3B,aAAa4B,QAAQ,eAvCnC,G","sources":["webpack://trello/./src/index.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n    const columns = document.querySelectorAll('.column');\n\n    columns.forEach(column => {\n        const addCardButton = column.querySelector('.add-card');\n        addCardButton.addEventListener('click', () => {\n            const cardText = prompt('Enter card text:');\n            if (cardText) {\n                addCard(column, cardText);\n                saveState();\n            }\n        });\n        \n        const cardsContainer = column.querySelector('.cards');\n        cardsContainer.addEventListener('dragover', (e) => e.preventDefault());\n        cardsContainer.addEventListener('drop', (e) => {\n            const cardId = e.dataTransfer.getData('text/plain');\n            const card = document.getElementById(cardId);\n            cardsContainer.appendChild(card);\n            saveState();\n        });\n    });\n\n    loadState();\n});\n\nfunction addCard(column, text) {\n    const card = document.createElement('div');\n    card.className = 'card';\n    card.textContent = text;\n    card.setAttribute('draggable', true);\n    \n    const removeBtn = document.createElement('span');\n    removeBtn.textContent = '✖️';\n    removeBtn.className = 'remove';\n    removeBtn.onclick = () => {\n        card.remove();\n        saveState();\n    };\n    \n    card.appendChild(removeBtn);\n    \n    card.addEventListener('dragstart', (e) => {\n        e.dataTransfer.setData('text/plain', card.id);\n        e.dataTransfer.effectAllowed = 'move';\n    });\n\n    column.querySelector('.cards').appendChild(card);\n}\n\nfunction saveState() {\n    const state = {};\n    \n    document.querySelectorAll('.column').forEach(column => {\n        const columnId = column.dataset.columnId;\n        state[columnId] = Array.from(column.querySelectorAll('.card')).map(card => card.textContent.replace('✖️', '').trim());\n    });\n    \n    localStorage.setItem('trelloState', JSON.stringify(state));\n}\n\nfunction loadState() {\n    const state = JSON.parse(localStorage.getItem('trelloState'));\n    \n    function loadState() {\n        const state = JSON.parse(localStorage.getItem('trelloState'));\n        \n        if (state) {\n            Object.keys(state).forEach(columnId => {\n                const column = document.querySelector(`.column[data-column-id=\"${columnId}\"]`);\n                state[columnId].forEach(text => addCard(column, text));\n            });\n        }\n    }\n}\n"],"names":["saveState","state","document","querySelectorAll","forEach","column","columnId","dataset","Array","from","map","card","textContent","replace","trim","localStorage","setItem","JSON","stringify","addEventListener","querySelector","cardText","prompt","text","createElement","className","setAttribute","removeBtn","onclick","remove","appendChild","e","dataTransfer","setData","id","effectAllowed","addCard","cardsContainer","preventDefault","cardId","getData","getElementById","parse","getItem"],"sourceRoot":""}